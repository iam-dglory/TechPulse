#!/usr/bin/env node

/**
 * TechPulse API Keys Setup Script
 * 
 * This script helps you set up your API keys for the TechPulse backend.
 * It will create a .env file with the provided API keys.
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

const envPath = path.join(__dirname, '.env');

console.log('üöÄ TechPulse API Keys Setup');
console.log('============================\n');

console.log('This script will help you set up your API keys for TechPulse.');
console.log('You already have the following API keys:');
console.log('‚Ä¢ NewsAPI.org: cec6bb685eb9419fae97970066c63f5e');
console.log('‚Ä¢ The Guardian API: b133fd4e-fb25-42bf-a4ec-e9d25888285d\n');

const envContent = `# TechPulse Environment Configuration
# Generated by setup-api-keys.js

# Database Configuration
DB_HOST=localhost
DB_USER=root
DB_PASSWORD=password
DB_NAME=tech_news

# JWT Configuration
JWT_SECRET=techpulse_super_secret_jwt_key_${Date.now()}
JWT_EXPIRES_IN=24h

# News API Keys
NEWS_API_KEY=cec6bb685eb9419fae97970066c63f5e
GUARDIAN_API_KEY=b133fd4e-fb25-42bf-a4ec-e9d25888285d

# Server Configuration
PORT=5000
NODE_ENV=development

# CORS Configuration
FRONTEND_URL=http://localhost:3000

# Additional API Keys (optional)
DEVTO_API_KEY=your_devto_api_key_here
HACKERNEWS_API_BASE_URL=https://hacker-news.firebaseio.com/v0
`;

rl.question('Do you want to create a .env file with these API keys? (y/n): ', (answer) => {
  if (answer.toLowerCase() === 'y' || answer.toLowerCase() === 'yes') {
    try {
      // Check if .env already exists
      if (fs.existsSync(envPath)) {
        rl.question('‚ö†Ô∏è  .env file already exists. Do you want to overwrite it? (y/n): ', (overwriteAnswer) => {
          if (overwriteAnswer.toLowerCase() === 'y' || overwriteAnswer.toLowerCase() === 'yes') {
            createEnvFile();
          } else {
            console.log('‚ùå Setup cancelled. Your existing .env file was preserved.');
            rl.close();
          }
        });
      } else {
        createEnvFile();
      }
    } catch (error) {
      console.error('‚ùå Error creating .env file:', error.message);
      rl.close();
    }
  } else {
    console.log('‚ùå Setup cancelled.');
    rl.close();
  }
});

function createEnvFile() {
  try {
    fs.writeFileSync(envPath, envContent);
    console.log('‚úÖ .env file created successfully!');
    console.log('\nüìã Your API keys are now configured:');
    console.log('‚Ä¢ NewsAPI.org: ‚úÖ Configured');
    console.log('‚Ä¢ The Guardian API: ‚úÖ Configured');
    console.log('\nüöÄ You can now start the server with: npm start');
    console.log('\nüìñ For more information, see:');
    console.log('‚Ä¢ backend/FALLBACK-README.md - Fallback system documentation');
    console.log('‚Ä¢ backend/README-REPLIT.md - Replit setup guide');
    console.log('‚Ä¢ env.production.template - Production environment template');
  } catch (error) {
    console.error('‚ùå Error writing .env file:', error.message);
  } finally {
    rl.close();
  }
}

// Handle process termination
process.on('SIGINT', () => {
  console.log('\n‚ùå Setup cancelled.');
  rl.close();
  process.exit(0);
});
