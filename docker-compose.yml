version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: tech_news_mysql
    environment:
      MYSQL_DATABASE: tech_news
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_USER: ${DB_USER:-root}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT:-3306}:3306"
    networks:
      - tech_news_network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: ../Dockerfile.backend
    container_name: tech_news_backend
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-5000}
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${DB_USER:-root}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_NAME: tech_news
      JWT_SECRET: ${JWT_SECRET:-your_super_secret_jwt_key_here}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      NEWS_API_KEY: ${NEWS_API_KEY:-your_news_api_key_here}
      GUARDIAN_API_KEY: ${GUARDIAN_API_KEY:-your_guardian_api_key_here}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    ports:
      - "${PORT:-5000}:5000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - tech_news_network
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: tech_news_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - tech_news_network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local

networks:
  tech_news_network:
    driver: bridge
